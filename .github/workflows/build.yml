name: Build OpenSSL for ARM64

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-openssl:
    runs-on: ubuntu-latest
    steps:
      - name: Download and unzip OpenSSL
        run: |
          source_info="$(curl -sL https://api.github.com/repos/openssl/openssl/releases/latest)"
          source_url=$(echo "$source_info" | jq -r '.assets[] | select(.name | test("^openssl-[0-9]*\\.[0-9]*\\.[0-9]*\\.tar\\.gz$")) | .browser_download_url')
          sha256_url=$(echo "$source_info" | jq -r '.assets[] | select(.name | test("^openssl-[0-9]*\\.[0-9]*\\.[0-9]*\\.tar\\.gz\\.sha256$")) | .browser_download_url')
          wget -nv "$source_url" "$sha256_url"
          source_name=${source_url##*/}
          sha256_name=${sha256_url##*/}
          sha256sum -c $sha256_name && tar -xzf $source_name || exit 1
          echo "TAG_NAME=$(echo "$source_info" | jq -r '.tag_name')" >> "$GITHUB_ENV"

      - name: Compile and Install OpenSSL
        run: |
          set -x
          OUTPATH="$HOME/openssl-android-arm64"
          export PATH="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"
          cd openssl-*/
          ./Configure android-arm64 --prefix="$OUTPATH" no-shared enable-ec_nistp_64_gcc_128 -fPIC
          make -j$(nproc)
          make install
          echo "OUTPATH=$OUTPATH" >> "$GITHUB_ENV"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TAG_NAME }}-android-arm64
          path: ${{ env.OUTPATH }}

      - name: Strip Symbol Information
        run: |
          OUTFILE="$HOME/openssl"
          export PATH="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"
          llvm-objcopy -S $OUTPATH/bin/openssl "$OUTFILE"
          echo "OUTFILE=$OUTFILE" >> "$GITHUB_ENV"

      - name: Upload OpenSSL Binary
        uses: actions/upload-artifact@v4
        with:
          name: openssl-binary
          path: ${{ env.OUTFILE }}
