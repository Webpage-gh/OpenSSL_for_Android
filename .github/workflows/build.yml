name: Build OpenSSL for ARM64

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-openssl:
    runs-on: ubuntu-latest
    steps:
      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install build-essential cmake gcc-aarch64-linux-gnu g++-aarch64-linux-gnu jq wget -y

      - name: Download the latest source code
        run: |
          source_info=$(curl -sL https://api.github.com/repos/openssl/openssl/releases/latest)
          source_url=$(echo "$source_info" | jq -r '.assets[] | select(.name | test("^openssl-[0-9]*\\.[0-9]*\\.[0-9]*\\.tar\\.gz$")) | .browser_download_url')
          sha256_url=$(echo "$source_info" | jq -r '.assets[] | select(.name | test("^openssl-[0-9]*\\.[0-9]*\\.[0-9]*\\.tar\\.gz\\.sha256$")) | .browser_download_url')
          echo "SOURCE_NAME=openssl.tar.gz" >> "$GITHUB_ENV"
          echo "SHA256_NAME=$source_name.sha256" >> "$GITHUB_ENV"
          wget -O "${{ env.SOURCE_NAME }}" "$source_url"
          wget -O "${{ env.SHA256_NAME }}" "$sha256_url"

      - name: Verify and Extract OpenSSL
        run: |
          sha256sum -c <(echo "$(cat "${{ env.SHA256_NAME }}) ${{ SOURCE_NAME }}") || exit 1
          tar -xzf openssl.tar.gz

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Compile and Install OpenSSL
        run: |
          echo "OUTPATH=$HOME/openssl-android-arm64" >> "$GITHUB_ENV"
          cd openssl-*/
          ./Configure android-arm64-v8a -D__ANDROID_API__=26 --prefix="${{ env.OUTPATH }}" --openssldir="${{ env.OUTPATH }}/ssl" no-shared no-unit-test no-ssl3 enable-ec_nistp_64_gcc_128 -fPIE -pie
          make -j"$(nproc)"
          make install

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: openssl-android-arm64
          path: ${{ env.OUTPATH }}
